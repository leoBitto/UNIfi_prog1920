/*
 * Scrivere un metodo, chiamato unique,
 * che dato in input un array a di numeri
 * interi positivi (eventualmente vuoto), 
 * restituisca l'array (eventualmente vuoto)
 * contenente gli elementi di a che appaiono
 * una sola volta in a stesso, nello stesso ordine
 * con cui essi appaiono in a.
 * 
 * ESEMPI
 * Input: {32,23,12,23,15,32}
 * Output: {12,15}
 * 
 * Input: {127,34,45,56,34,127,23,45,12,56,23}
 * Output: {12}
 * 
 * Input: {20,11,15,41,23}
 * Output: {20,11,15,41,23}
 * 
 * Input: {127,34,45,56,34,127,23,45,12,56,23,12}
 * Output: {}

 * Input: {}
 * Output: {}
 */
int[] unique(int[] a){
	// confronta ogni valore con i restanti 
	// se trovi due valori uguali metti il 
	// secondo che hai trovato a -1 e fai un ciclo
	// sul resto dell'array per trovare altri valori uguali
	// poi metti il valore copia a -1
	//int counter = a.length-1;
	for( int i=0;i<a.length;i++) {
		for( int j=i+1;j<a.length;j++) {
			if(a[i]==a[j]) {
				a[j]=-1;
				//counter--;
				for(int k=j;k<a.length;k++) {
					if(a[i]==a[k]) {
						a[k]=-1;
						//counter--;
					}
				}
				a[i]=-1;
				//counter--;
			}
		}
	}
	// conta i valori diversi da -1 nell'array
	//OTTIMIZAZIONE : CONTI IL NUMERO DI POS NECESSARIE NEI CICLI SOPRA
	int counter = 0;
	for(int i=0;i<a.length;i++) {
		if(a[i]!=-1) {
			counter++;
		}
	}
	// crea un nuovo array della lunghezza contata
	int[] b = new int[counter];
	// inserisci i valori nell'array 
	int index = 0;
	for(int i=0;i<=a.length-1;i++) {
		if(a[i]!=-1) {
			b[index]=a[i];
			index++;
		}
	}
	return b;
}
//unique({32,23,12,23,15,32});